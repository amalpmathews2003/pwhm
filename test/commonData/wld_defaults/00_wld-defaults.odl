/****************************************************************************
**
** SPDX-License-Identifier: BSD-2-Clause-Patent
**
** SPDX-FileCopyrightText: Copyright (c) 2023 SoftAtHome
**
** Redistribution and use in source and binary forms, with or
** without modification, are permitted provided that the following
** conditions are met:
**
** 1. Redistributions of source code must retain the above copyright
** notice, this list of conditions and the following disclaimer.
**
** 2. Redistributions in binary form must reproduce the above
** copyright notice, this list of conditions and the following
** disclaimer in the documentation and/or other materials provided
** with the distribution.
**
** Subject to the terms and conditions of this license, each
** copyright holder and contributor hereby grants to those receiving
** rights under this license a perpetual, worldwide, non-exclusive,
** no-charge, royalty-free, irrevocable (except for failure to
** satisfy the conditions of this license) patent license to make,
** have made, use, offer to sell, sell, import, and otherwise
** transfer this software, where such license applies only to those
** patent claims, already acquired or hereafter acquired, licensable
** by such copyright holder or contributor that are necessarily
** infringed by:
**
** (a) their Contribution(s) (the licensed copyrights of copyright
** holders and non-copyrightable additions of contributors, in
** source or binary form) alone; or
**
** (b) combination of their Contribution(s) with the work of
** authorship to which such Contribution(s) was added by such
** copyright holder or contributor, if, at the time the Contribution
** is added, such addition causes such combination to be necessarily
** infringed. The patent license shall not apply to any other
** combinations which include the Contribution.
**
** Except as expressly stated above, no rights or licenses from any
** copyright holder or contributor is granted under this license,
** whether expressly, by implication, estoppel or otherwise.
**
** DISCLAIMER
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
** CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
** INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
** MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
** CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
** USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
** AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
** ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
**
****************************************************************************/

%populate {
    object WiFi {
        object AutoCommitMgr {
            parameter Enable = true;
            parameter DelayTime = 5;
        }
        object Radio {
            instance add ("wifi0") {
                parameter OperatingFrequencyBand = "2.4GHz";
                parameter Enable = 1;
                parameter AutoChannelEnable = 0;
                parameter Channel = 1;
                parameter RegulatoryDomain = "DE";
                parameter AP_Mode = 1;
                parameter AirtimeFairnessEnabled = 1;
                parameter IntelligentAirtimeSchedulingEnable = 1;
                parameter RxPowerSaveEnabled = 1;
                parameter RetryLimit = 7;
                parameter TargetWakeTimeEnable = 1;
                parameter ObssCoexistenceEnable = 1;
                parameter OperatingStandards = "b,g,n,ax";
                parameter OperatingChannelBandwidth = "20MHz";
                parameter MaxAssociatedDevices = 32;
                object MACConfig {
                    parameter UseBaseMacOffset = 1;
                    parameter BaseMacOffset = 1;
                }
                object Sensing {
                    parameter Enable = 0;
                }
            }
            instance add ("wifi1") {
                parameter OperatingFrequencyBand = "5GHz";
                parameter Enable = 1;
                parameter AutoChannelEnable = 0;
                parameter Channel = 36;
                parameter RegulatoryDomain = "DE";
                parameter AP_Mode = 1;
                parameter WDS_Mode = 1;
                parameter AirtimeFairnessEnabled = 1;
                parameter IntelligentAirtimeSchedulingEnable = 1;
                parameter MultiUserMIMOEnabled = 1;
                parameter RxPowerSaveEnabled = 1;
                parameter RetryLimit = 7;
                parameter TargetWakeTimeEnable = 1;
                parameter MaxAssociatedDevices = 32;
                object RadCaps {
                    parameter Enabled = "DFS_AHEAD DELAY_COMMIT";
                }
                parameter OperatingStandards = "a,n,ac,ax";
                object Sensing {
                    parameter Enable = 0;
                }
            }
            instance add ("wifi2") {
                parameter OperatingFrequencyBand = "6GHz";
                parameter Enable = 1;
                parameter AutoChannelEnable = 0;
                parameter Channel = 1;
                parameter RegulatoryDomain = "DE";
                parameter AP_Mode = 1;
                parameter WDS_Mode = 1;
                parameter AirtimeFairnessEnabled = 1;
                parameter IntelligentAirtimeSchedulingEnable = 1;
                parameter MultiUserMIMOEnabled = 1;
                parameter RxPowerSaveEnabled = 1;
                parameter RetryLimit = 7;
                parameter TargetWakeTimeEnable = 1;
                parameter MaxAssociatedDevices = 32;
                object RadCaps {
                    parameter Enabled = "DFS_AHEAD DELAY_COMMIT";
                }
                parameter OperatingStandards = "ax";
                object Sensing {
                    parameter Enable = 0;
                }
            }
        }
        object SSID {
            instance add ("wlan0") {
                parameter LowerLayers = "WiFi.Radio.wifi0";
                parameter MACAddress = "AA:BB:CC:DD:EE:01";
                parameter SSID = "prplMesh-WHM-24g";
                parameter Enable = 1;
            }
            instance add ("wlan1") {
                parameter LowerLayers = "WiFi.Radio.wifi1";
                parameter MACAddress = "AA:BB:CC:DD:EE:11";
                parameter SSID = "prplMesh-WHM-5g";
                parameter Enable = 1;
            }
            instance add ("wlan2") {
                parameter LowerLayers = "WiFi.Radio.wifi2";
                parameter MACAddress = "AA:BB:CC:DD:EE:21";
                parameter SSID = "prplMesh-WHM-6g";
                parameter Enable = 1;
            }
            instance add ("sta0") {
                parameter LowerLayers = "WiFi.Radio.wifi0";
                parameter MACAddress = "AA:BB:CC:DD:EE:00";
                parameter SSID = "prplMesh-WHM-5g";
                parameter Enable = 1;
            }
            instance add ("sta1") {
                parameter LowerLayers = "WiFi.Radio.wifi1";
                parameter MACAddress = "AA:BB:CC:DD:EE:10";
                parameter SSID = "prplMesh-WHM-5g";
                parameter Enable = 1;
            }
            instance add ("sta2") {
                parameter LowerLayers = "WiFi.Radio.wifi2";
                parameter MACAddress = "AA:BB:CC:DD:EE:20";
                parameter SSID = "prplMesh-WHM-6g";
                parameter Enable = 1;
            }
        }
        object AccessPoint {
            instance add ("wlan0") {
                parameter SSIDReference = "WiFi.SSID.wlan0";
                parameter Enable = 1;
                parameter RetryLimit = 0;
                parameter WMMEnable = 0;
                parameter DefaultDeviceType = "Data";
                parameter BridgeInterface = "br-lan";
                parameter WDSEnable = 1;
                parameter MultiAPType = "FronthaulBSS,BackhaulBSS";
                parameter MaxAssociatedDevices = 32;
                object Security {
                    parameter ModeEnabled = "WPA2-Personal";
                    parameter KeyPassPhrase = "prplMesh";
                    parameter RekeyingInterval = 0;
                    parameter SPPAmsdu = 0;
                }
                object WPS {
                    parameter Enable = 1;
                }
                object RssiEventing {
                    parameter Enable = false;
                    parameter HistoryLen = 3;
                }
            }
            instance add ("wlan1") {
                parameter SSIDReference = "WiFi.SSID.wlan1";
                parameter Enable = 1;
                parameter WMMEnable = 0;
                parameter DefaultDeviceType = "Data";
                parameter BridgeInterface = "br-lan";
                parameter MultiAPType = "FronthaulBSS,BackhaulBSS";
                parameter MaxAssociatedDevices = 32;
                object Security {
                    parameter ModeEnabled = "WPA2-Personal";
                    parameter KeyPassPhrase = "prplMesh";
                    parameter RekeyingInterval = 0;
                }
                object WPS {
                    parameter Enable = 1;
                }
                object RssiEventing {
                    parameter Enable = false;
                    parameter HistoryLen = 3;
                }
            }
            instance add ("wlan2") {
                parameter SSIDReference = "WiFi.SSID.wlan2";
                parameter Enable = 1;
                parameter WMMEnable = 0;
                parameter DefaultDeviceType = "Data";
                parameter BridgeInterface = "br-lan";
                parameter MultiAPType = "FronthaulBSS,BackhaulBSS";
                parameter MaxAssociatedDevices = 32;
                object Security {
                    parameter ModeEnabled = "WPA2-Personal";
                    parameter KeyPassPhrase = "prplMesh";
                    parameter RekeyingInterval = 0;
                }
                object WPS {
                    parameter Enable = 1;
                }
                object RssiEventing {
                    parameter Enable = false;
                    parameter HistoryLen = 3;
                }
            }
        }
        object EndPoint {
            instance add ("sta0") {
                parameter SSIDReference = "WiFi.SSID.sta0";
                parameter Enable = 1;
                parameter RadioReference = "WiFi.Radio.wifi0";
                parameter ProfileReference = "WiFi.EndPoint.sta0.Profile.prof0";
                object Stats {
                    parameter TxBytes = 12991;
                    parameter TxPacketCount = 65;
                    parameter SecurityModeEnabled = "WPA2-Personal";
                }
                object Profile {
                	instance add ("prof0"){
                		parameter Alias = "prof0";
                		parameter Enable = 1;
                		parameter SSID = "prplMesh-WHM-24g";
                		object Security {
                			parameter ModeEnabled = "WPA2-Personal";
                			parameter KeyPassPhrase = "prplMesh";
                		}	
                	}
                    instance add ("prof2"){
                        parameter Alias = "prof2";
                        parameter Enable = 0;
                        parameter SSID = "prplMesh-WHM-24g";
                        object Security {
                            parameter ModeEnabled = "WPA2-Personal";
                            parameter KeyPassPhrase = "prplMesh";
                        }
                    }
                }
            }
        }
        object EndPoint {
            instance add ("sta1") {
                parameter SSIDReference = "WiFi.SSID.sta1";
                parameter Enable = 1;
                parameter RadioReference = "WiFi.Radio.wifi1";
                parameter ProfileReference = "WiFi.EndPoint.sta1.Profile.prof1";
                object Stats {
                    parameter TxBytes = 12991;
                    parameter TxPacketCount = 65;
                    parameter SecurityModeEnabled = "WPA2-Personal";
                }
                object Profile {
                    instance add ("prof1"){
                        parameter Alias = "prof1";
                        parameter Enable = 1;
                        parameter SSID = "prplMesh-WHM-5g";
                        object Security {
                            parameter ModeEnabled = "WPA2-Personal";
                            parameter KeyPassPhrase = "prplMesh";
                        }
                    }
                    instance add ("prof3"){
                        parameter Alias = "prof3";
                        parameter Enable = 0;
                        parameter SSID = "prplMesh-WHM-5g";
                        object Security {
                            parameter ModeEnabled = "WPA2-Personal";
                            parameter KeyPassPhrase = "prplMesh";
                        }
                    }
                }
            }
        }
        object EndPoint {
            instance add ("sta2") {
                parameter SSIDReference = "WiFi.SSID.sta2";
                parameter Enable = 1;
                parameter RadioReference = "WiFi.Radio.wifi2";
                parameter ProfileReference = "WiFi.EndPoint.sta2.Profile.prof1";
                object Stats {
                    parameter TxBytes = 12991;
                    parameter TxPacketCount = 65;
                    parameter SecurityModeEnabled = "WPA2-Personal";
                }
                object Profile {
                    instance add ("prof1"){
                        parameter Alias = "prof1";
                        parameter Enable = 1;
                        parameter SSID = "prplMesh-WHM-5g";
                        object Security {
                            parameter ModeEnabled = "WPA2-Personal";
                            parameter KeyPassPhrase = "prplMesh";
                        }
                    }
                    instance add ("prof3"){
                        parameter Alias = "prof3";
                        parameter Enable = 0;
                        parameter SSID = "prplMesh-WHM-5g";
                        object Security {
                            parameter ModeEnabled = "WPA2-Personal";
                            parameter KeyPassPhrase = "prplMesh";
                        }
                    }
                }
            }
        }
    }
}
