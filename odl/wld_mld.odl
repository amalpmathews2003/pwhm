/****************************************************************************
**
** SPDX-License-Identifier: BSD-2-Clause-Patent
**
** SPDX-FileCopyrightText: Copyright (c) 2022 SoftAtHome
**
** Redistribution and use in source and binary forms, with or
** without modification, are permitted provided that the following
** conditions are met:
**
** 1. Redistributions of source code must retain the above copyright
** notice, this list of conditions and the following disclaimer.
**
** 2. Redistributions in binary form must reproduce the above
** copyright notice, this list of conditions and the following
** disclaimer in the documentation and/or other materials provided
** with the distribution.
**
** Subject to the terms and conditions of this license, each
** copyright holder and contributor hereby grants to those receiving
** rights under this license a perpetual, worldwide, non-exclusive,
** no-charge, royalty-free, irrevocable (except for failure to
** satisfy the conditions of this license) patent license to make,
** have made, use, offer to sell, sell, import, and otherwise
** transfer this software, where such license applies only to those
** patent claims, already acquired or hereafter acquired, licensable
** by such copyright holder or contributor that are necessarily
** infringed by:
**
** (a) their Contribution(s) (the licensed copyrights of copyright
** holders and non-copyrightable additions of contributors, in
** source or binary form) alone; or
**
** (b) combination of their Contribution(s) with the work of
** authorship to which such Contribution(s) was added by such
** copyright holder or contributor, if, at the time the Contribution
** is added, such addition causes such combination to be necessarily
** infringed. The patent license shall not apply to any other
** combinations which include the Contribution.
**
** Except as expressly stated above, no rights or licenses from any
** copyright holder or contributor is granted under this license,
** whether expressly, by implication, estoppel or otherwise.
**
** DISCLAIMER
**
** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND
** CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
** INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
** MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR
** CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
** SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
** LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
** USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
** AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
** LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
** ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
** POSSIBILITY OF SUCH DAMAGE.
**
****************************************************************************/

%define {
	select WiFi {
		/**
		 * Maximum number of MLDs supported by the platform.
		 */
		%persistent %read-only uint32 MaxNumMLDs {
			default 3;
		}

		/**
		 * Maximum number of affiliated APs (links) per MLD supported by the platform.
		 */
		%persistent %read-only uint32 APMLDMaxLinks {
			default 4;
		}

		/**
		 * APMLD table representing Multi-Link Device instances.
		 */
		%persistent object APMLD[] {

			/**
			 * The MAC address identifying this MLD.
			 */
			%persistent %read-only string MLDMACAddress {
				default "00:00:00:00:00:00";
			}

			/**
			 * Number of affiliated APs (links) under this MLD.
			 */
			%persistent %read-only uint32 AffiliatedAPNumberOfEntries {
				default 0;
			}
			%persistent %read-only uint32 MLDID {
				default -1;
			}
			%persistent object APMLDConfig {
				on event "*" call wld_ap_setMLDConfig_ocf;

				/**
				 * Configure if the Enhanced Multi-Link Multi-Radio (EMLMR) operation is enabled on this AP MLD.
				 * Note that this shall only be applied if EMLMRSupport is present.
				 * 0 disable.
				 * 1 enable.
				 * -1 driver default.
				 */
				%persistent int8 EMLMREnabled {
					on action validate call check_range { min = -1, max = 1 };
					default -1;
				}

				/**
				 * Configure if Enhanced Multi-Link Single-Radio (EMLSR) operation is enabled on this AP MLD.
				 * Note that this shall only be applied if EMLSRSupport is present.
				 * 0 disable.
				 * 1 enable.
				 * -1 driver default.
				 */
				%persistent int8 EMLSREnabled {
					on action validate call check_range { min = -1, max = 1 };
					default -1;
				}

				/**
				 * Configure if Simultaneous Transmit and Receive (STR) operation is enabled on this AP MLD.
				 * 0 disable.
				 * 1 enable.
				 * -1 driver default.
				 */
				%persistent int8 STREnabled {
					on action validate call check_range { min = -1, max = 1 };
					default -1;
				}

				/**
				 * Configure if Non-Simultaneous Transmit and Receive (NSTR) operation is enabled on this AP MLD.
				 * 0 disable.
				 * 1 enable.
				 * -1 driver default.
				 */
				%persistent int8 NSTREnabled {
					on action validate call check_range { min = -1, max = 1 };
					default -1;
				}
			}


			%persistent object AffiliatedAP[] {
				%persistent %read-only string BSSID {
					default "";
				}
				%persistent %read-only uint8 LinkID {
					default -1;
					%read-only object Stats {
						on action read call wld_affAP_getMloStats_orf;

						/**
						 * The number of packets transmitted to the Affiliated AP.
						 * Note: this counter counts only MLD traffic through this BSSID, not legacy (non-MLD) traffic.
						 */
						%volatile %read-only uint32 PacketsSent;

						/**
						 * The total number of packets received from the associated client MLD.
						 */
						%volatile %read-only uint32 PacketsReceived;

						/**
						 * Total number of unicast bytes transmitted to MLD STAs associated with the affiliated AP.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 UnicastBytesSent;

						/**
						 * Total number of unicast bytes received from MLD STAs associated with the affiliated AP.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 UnicastBytesReceived;

						/**
						 * The number of packets which could not be transmitted by the Affiliated AP due to errors.
						 * This counter counts only MLD traffic through this BSSID, not legacy (non-MLD) traffic.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 ErrorsSent;

						/**
						 * Total multicast bytes transmitted to MLD STAs associated with the affiliated AP.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 MulticastBytesSent;

						/**
						 * Total multicast bytes received from MLD STAs associated with the affiliated AP.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 MulticastBytesReceived;

						/**
						 * Total broadcast bytes transmitted to MLD STAs associated with the affiliated AP.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 BroadcastBytesSent;

						/**
						 * Total broadcast bytes received from MLD STAs associated with the affiliated AP.
						 * [EasyMesh] source: Affiliated AP Metrics TLV.
						 */
						%volatile %read-only uint32 BroadcastBytesReceived;

					}
				}
			}

		}

	}

}
